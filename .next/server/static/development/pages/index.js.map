{"version":3,"file":"static/development/pages/index.js","sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/define-property.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty.js","webpack:///./pages/index.js","webpack:///external \"antd/lib/button\"","webpack:///external \"antd/lib/card\"","webpack:///external \"antd/lib/icon\"","webpack:///external \"antd/lib/input\"","webpack:///external \"antd/lib/upload\"","webpack:///external \"axios\"","webpack:///external \"core-js/library/fn/object/define-property\"","webpack:///external \"firebase\"","webpack:///external \"react\"","webpack:///external \"react-spinners\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","module.exports = require(\"core-js/library/fn/object/define-property\");","import _Object$defineProperty from \"../../core-js/object/define-property\";\nexport default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    _Object$defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import React, { Component } from \"react\";\nimport { Button, Input, Icon, Upload, Card, Statistic, Row, Col } from \"antd\";\nimport axios from \"axios\";\nlet ml5;\nlet featureExtractor;\nlet regressor;\nconst Dragger = Upload.Dragger;\nimport firebase from \"firebase\";\nimport { ClimbingBoxLoader } from \"react-spinners\";\n\nif (typeof window !== \"undefined\") {\n  ml5 = require(\"ml5\");\n  featureExtractor = ml5.featureExtractor(\"MobileNet\", () => {}, {\n    version: 1,\n    alpha: 1.0,\n    topk: 3,\n    learningRate: 0.0001,\n    hiddenUnits: 100,\n    epochs: 20,\n    numClasses: 2,\n    batchSize: 0.4\n  });\n  regressor = featureExtractor.regression();\n}\n\nclass App extends Component {\n  state = {\n    text: \"\",\n    targetUri: \"\",\n    image: {},\n    targetImage: {},\n    memeTypes: [],\n    images: [],\n    memeCount: [],\n    response: \"\",\n    prediction: \"\",\n    loading: true,\n    loss: 0\n  };\n\n  static async getInitialProps({ store, query, isServer, test }) {\n    const config = {\n      apiKey: process.env.apiKey,\n      authDomain: process.env.authDomain,\n      databaseURL: process.env.databaseURL,\n      projectId: process.env.projectId,\n      storageBucket: process.env.storageBucket,\n      messagingSenderId: process.env.messagingSenderId\n    };\n\n    return {\n      config\n    };\n  }\n\n  async componentDidMount() {\n    if (!firebase.apps.length) {\n      await firebase.initializeApp(this.props.config);\n    }\n\n    const snapshot = await firebase\n      .database()\n      .ref()\n      .once(\"value\");\n    const result = await snapshot.val();\n    const memeTypes = result.types;\n\n    let counter = 0;\n    this.setState({\n      images: result.data,\n      memeTypes\n    });\n\n    result.data.map(image => {\n      const index = memeTypes.indexOf(image.name);\n      const newMemeCount = this.state.memeCount;\n      if (newMemeCount[index]) {\n        newMemeCount[index]++;\n      } else {\n        newMemeCount[index] = 1;\n      }\n\n      this.setState({\n        memeCount: newMemeCount\n      });\n\n      const img = new Image();\n      img.crossOrigin = \"anonymous\";\n      img.onload = async () => {\n        await regressor.addImage(img, index);\n        counter++;\n        if (counter == result.data.length - 1) {\n          this.setState({ loading: false });\n        }\n      };\n      img.src = image.uri;\n      img.width = 250;\n      img.height = 250;\n    });\n  }\n\n  handleTrain = async () => {\n    await regressor.train(lossValue => {\n      if (lossValue) {\n        let loss = lossValue;\n        this.setState({ loss });\n      } else {\n        this.setState({ loss: 0 });\n      }\n    });\n  };\n\n  handleUpload = async () => {\n    this.setState({ response: \"\", prediction: \"\" });\n    const e = this.state.targetImage;\n    var formData = new FormData();\n    formData.append(\"image\", e);\n\n    const { data } = await axios({\n      method: \"post\",\n      url: \"https://api.imgur.com/3/image\",\n      data: formData,\n      headers: {\n        authorization: \"Client-ID 7e4e554040292df\"\n      }\n    });\n\n    this.setState({\n      targetUri: data.data.link\n    });\n  };\n\n  handleIdentify = () => {\n    const img = new Image();\n    img.crossOrigin = \"anonymous\";\n    img.onload = async () => {\n      const { value } = await regressor.predict(img);\n      this.setState({\n        response: value,\n        prediction: this.state.memeTypes[\n          Math.round(value) > this.state.memeTypes.length - 1\n            ? this.state.memeTypes.length - 1\n            : Math.round(value)\n        ]\n      });\n    };\n    img.src = this.state.targetUri;\n    img.width = 250;\n    img.height = 250;\n  };\n\n  handleAdd = async event => {\n    const e = this.state.image;\n    const newData = this.state.images;\n\n    var formData = new FormData();\n    formData.append(\"image\", e);\n    formData.append(\"name\", this.state.title);\n\n    const { data } = await axios({\n      method: \"post\",\n      url: \"https://api.imgur.com/3/image\",\n      data: formData,\n      headers: {\n        authorization: \"Client-ID 8d1d1c33ea509f6\"\n      }\n    });\n\n    let memeTypes = this.state.memeTypes;\n\n    let index = memeTypes.indexOf(this.state.text);\n    if (index == -1) {\n      memeTypes.push(this.state.text);\n    }\n    index = memeTypes.indexOf(this.state.text);\n\n    const img = new Image();\n    img.crossOrigin = \"anonymous\";\n    img.onload = async () => {\n      await regressor.addImage(img, index);\n    };\n    img.src = data.data.link;\n    img.width = 250;\n    img.height = 250;\n\n    newData.push({\n      name: this.state.text,\n      uri: data.data.link\n    });\n\n    await firebase\n      .database()\n      .ref()\n      .set({ data: newData, types: memeTypes });\n  };\n\n  onTextChange = event => {\n    this.setState({ text: event.target.value });\n  };\n\n  renderCards = () => {\n    return this.state.memeTypes.map((meme, index) => {\n      return (\n        <Card\n          hoverable\n          key={meme}\n          style={{\n            width: \"12vw\",\n            borderColor: meme == this.state.prediction ? \"#00e676\" : null\n          }}\n        >\n          <div\n            style={{ color: \"black\", fontSize: \"0.8vw\", fontWeight: \"bold\" }}\n          >\n            {meme}\n          </div>\n          <div style={{ color: \"black\", fontSize: \"0.8vw\" }}>\n            {`${\n              this.state.memeCount[index] ? this.state.memeCount[index] : 0\n            } Images`}\n          </div>\n        </Card>\n      );\n    });\n  };\n\n  render() {\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          flexDirection: \"column\"\n        }}\n      >\n        <div\n          style={{\n            backgroundColor: \"black\",\n            postition: \"absolute\",\n            top: 0,\n            width: \"100vw\",\n            height: \"50vh\"\n          }}\n        />\n\n        <div\n          style={{\n            position: \"absolute\",\n            top: 0,\n            width: \"60%\",\n            marginTop: \"1vh\"\n          }}\n        >\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              justifyContent: \"space-between\"\n            }}\n          >\n            <div style={{ display: \"flex\", alignItems: \"row\" }}>\n              <Icon\n                type=\"area-chart\"\n                style={{\n                  fontSize: \"2vw\",\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  color: \"white\"\n                }}\n              />\n              <div\n                style={{\n                  fontSize: \"2vw\",\n                  fontWeight: \"bold\",\n                  color: \"white\",\n                  marginLeft: \"0.5vw\"\n                }}\n              >\n                MemeDB\n              </div>\n            </div>\n\n            <div\n              style={{ color: \"white\", display: \"flex\", alignItems: \"center\" }}\n            >\n              {`Memes Known: ${this.state.memeTypes.length}`}\n            </div>\n          </div>\n\n          <div\n            style={{\n              fontSize: \"6vw\",\n              fontWeight: \"bold\",\n              color: \"white\",\n              display: \"flex\",\n              justifyContent: \"center\",\n              marginTop: \"10vh\"\n            }}\n          >\n            Meme Classifier\n          </div>\n        </div>\n\n        {!this.state.loading ? (\n          <div>\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                justifyContent: \"space-evenly\",\n                width: \"100%\",\n                marginTop: \"2vh\",\n                marginBottom: \"2vh\"\n              }}\n            >\n              <div>\n                <div\n                  style={{\n                    fontWeight: \"bold\",\n                    fontSize: \"3vw\",\n                    color: \"black\"\n                  }}\n                >\n                  Training Data\n                </div>\n\n                <Input\n                  onChange={this.onTextChange}\n                  value={this.state.text}\n                  placeholder=\"Meme name\"\n                />\n\n                <Button\n                  style={{\n                    marginTop: \"2vh\",\n                    backgroundColor: \"black\",\n                    color: \"white\"\n                  }}\n                  onClick={this.handleAdd}\n                >\n                  <Icon type=\"plus\" />\n                  Add Image\n                </Button>\n              </div>\n\n              <div style={{ width: \"30%\" }}>\n                <Dragger\n                  showUploadList={false}\n                  onChange={event => {\n                    this.setState({\n                      image:\n                        event.fileList[event.fileList.length - 1].originFileObj\n                    });\n                  }}\n                >\n                  <p className=\"ant-upload-drag-icon\">\n                    <Icon type=\"inbox\" style={{ color: \"black\" }} />\n                  </p>\n                  <p className=\"ant-upload-text\">\n                    Click or drag file to this area to upload\n                  </p>\n                  <p className=\"ant-upload-hint\">\n                    Support for a single or bulk upload. Strictly prohibit from\n                    uploading company data or other band files\n                  </p>\n                </Dragger>\n              </div>\n            </div>\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                width: \"100vw\",\n                justifyContent: \"space-evenly\"\n              }}\n            >\n              {this.renderCards()}\n            </div>\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                marginTop: \"2vh\",\n                marginBottom: \"2vh\",\n                justifyContent: \"space-evenly\",\n                width: \"100vw\"\n              }}\n            >\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\"\n                }}\n              >\n                <div style={{ fontWeight: \"bold\" }}>Loss</div>\n                <div>{this.state.loss}</div>\n              </div>\n\n              <Button\n                style={{\n                  backgroundColor: \"black\"\n                }}\n                onClick={this.handleTrain}\n              >\n                <div\n                  style={{\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\"\n                  }}\n                >\n                  <Icon\n                    type=\"sliders\"\n                    style={{\n                      color: \"white\",\n                      marginRight: \"0.5vw\"\n                    }}\n                  />\n                  <div style={{ color: \"white\" }}>Train</div>\n                </div>\n              </Button>\n            </div>\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                width: \"100%\",\n                justifyContent: \"space-evenly\",\n                marginBottom: \"2vh\"\n              }}\n            >\n              <div style={{ width: \"30%\" }}>\n                <Dragger\n                  showUploadList={false}\n                  onChange={event => {\n                    this.setState({\n                      targetImage:\n                        event.fileList[event.fileList.length - 1].originFileObj\n                    });\n                  }}\n                >\n                  <p className=\"ant-upload-drag-icon\">\n                    <Icon type=\"inbox\" style={{ color: \"black\" }} />\n                  </p>\n                  <p className=\"ant-upload-text\">\n                    Click or drag file to this area to upload\n                  </p>\n                  <p className=\"ant-upload-hint\">\n                    Support for a single or bulk upload. Strictly prohibit from\n                    uploading company data or other band files\n                  </p>\n                </Dragger>\n              </div>\n\n              <div>\n                <div\n                  style={{\n                    fontWeight: \"bold\",\n                    fontSize: \"3vw\",\n                    color: \"black\"\n                  }}\n                >\n                  Target Data\n                </div>\n\n                <div>{`Regression: ${this.state.response}`} </div>\n                <div>{`Prediction: ${this.state.prediction}`}</div>\n\n                <div\n                  style={{ display: \"flex\", justifyContent: \"space-evenly\" }}\n                >\n                  <Button\n                    style={{\n                      marginTop: \"2vh\",\n                      backgroundColor: \"black\",\n                      color: \"white\"\n                    }}\n                    onClick={this.handleUpload}\n                  >\n                    <Icon type=\"plus\" />\n                    Add Image\n                  </Button>\n                  <Button\n                    style={{\n                      marginTop: \"2vh\",\n                      color: \"black\"\n                    }}\n                    onClick={this.handleIdentify}\n                  >\n                    <Icon type=\"eye\" />\n                    Predict\n                  </Button>\n                </div>\n              </div>\n            </div>\n          </div>\n        ) : (\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              height: \"50vh\",\n              weight: \"100vw\",\n              flexDirection: \"column\"\n            }}\n          >\n            <ClimbingBoxLoader style={{ width: \"20vw\" }} />\n            <div style={{ fontSize: \"1.2vw\", fontWeight: \"bold\" }}>Loading</div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","module.exports = require(\"antd/lib/button\");","module.exports = require(\"antd/lib/card\");","module.exports = require(\"antd/lib/icon\");","module.exports = require(\"antd/lib/input\");","module.exports = require(\"antd/lib/upload\");","module.exports = require(\"axios\");","module.exports = require(\"core-js/library/fn/object/define-property\");","module.exports = require(\"firebase\");","module.exports = require(\"react\");","module.exports = require(\"react-spinners\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACxFA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAaA;AACA;AACA;AAAA;AAAA;AACA;AADA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AACA;AAFA;AA6EA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAtFA;AAwFA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AADA;AAJA;AASA;AACA;AADA;AAGA;AACA;AA1GA;AA4GA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AAQA;AACA;AAAA;AACA;AACA;AACA;AACA;AA7HA;AA+HA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AADA;AAJA;AASA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAFA;AAKA;AAGA;AAAA;AAAA;AACA;AACA;AA1KA;AA4KA;AAAA;AAAA;AACA;AACA;AA9KA;AAgLA;AACA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AAvMA;AACA;AAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAEA;AACA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAIA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AA8HA;AACA;AAEA;AACA;AACA;AACA;AAHA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;AACA;AACA;AAJA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AAHA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;AACA;AACA;AAJA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AACA;AAC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","sourceRoot":""}