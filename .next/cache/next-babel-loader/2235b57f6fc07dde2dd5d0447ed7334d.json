{"ast":null,"code":"import \"antd/lib/button/style/css\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/input/style/css\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/icon/style/css\";\nimport _Icon from \"antd/lib/icon\";\nimport \"antd/lib/card/style/css\";\nimport _Card from \"antd/lib/card\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"antd/lib/upload/style/css\";\nimport _Upload from \"antd/lib/upload\";\nvar _jsxFileName = \"/Users/jackieni/dev/personal/meme-database/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nvar ml5;\nvar featureExtractor;\nvar regressor;\nvar Dragger = _Upload.Dragger;\nimport firebase from \"firebase\";\nimport { ClimbingBoxLoader } from \"react-spinners\";\n\nif (true) {\n  ml5 = require(\"ml5\");\n  featureExtractor = ml5.featureExtractor(\"MobileNet\", function () {}, {\n    version: 1,\n    alpha: 1.0,\n    topk: 3,\n    learningRate: 0.0001,\n    hiddenUnits: 100,\n    epochs: 20,\n    numClasses: 2,\n    batchSize: 0.4\n  });\n  regressor = featureExtractor.regression();\n}\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      text: \"\",\n      targetUri: \"\",\n      image: {},\n      targetImage: {},\n      memeTypes: [],\n      images: [],\n      memeCount: [],\n      response: \"\",\n      prediction: \"\",\n      loading: true,\n      loss: 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleTrain\", function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(regressor.train(function (lossValue) {\n                if (lossValue) {\n                  var loss = lossValue;\n\n                  _this.setState({\n                    loss: loss\n                  });\n                } else {\n                  _this.setState({\n                    loss: 0\n                  });\n                }\n              }));\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleUpload\", function _callee2() {\n      var e, formData, _ref, data;\n\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _this.setState({\n                response: \"\",\n                prediction: \"\"\n              });\n\n              e = _this.state.targetImage;\n              formData = new FormData();\n              formData.append(\"image\", e);\n              _context2.next = 6;\n              return _regeneratorRuntime.awrap(axios({\n                method: \"post\",\n                url: \"https://api.imgur.com/3/image\",\n                data: formData,\n                headers: {\n                  authorization: \"Client-ID 7e4e554040292df\"\n                }\n              }));\n\n            case 6:\n              _ref = _context2.sent;\n              data = _ref.data;\n\n              _this.setState({\n                targetUri: data.data.link\n              });\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleIdentify\", function () {\n      var img = new Image();\n      img.crossOrigin = \"anonymous\";\n\n      img.onload = function _callee3() {\n        var _ref2, value;\n\n        return _regeneratorRuntime.async(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return _regeneratorRuntime.awrap(regressor.predict(img));\n\n              case 2:\n                _ref2 = _context3.sent;\n                value = _ref2.value;\n\n                _this.setState({\n                  response: value,\n                  prediction: _this.state.memeTypes[Math.round(value) > _this.state.memeTypes.length - 1 ? _this.state.memeTypes.length - 1 : Math.round(value)]\n                });\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        });\n      };\n\n      img.src = _this.state.targetUri;\n      img.width = 250;\n      img.height = 250;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleAdd\", function _callee5(event) {\n      var e, newData, formData, _ref3, data, memeTypes, index, img;\n\n      return _regeneratorRuntime.async(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              e = _this.state.image;\n              newData = _this.state.images;\n              formData = new FormData();\n              formData.append(\"image\", e);\n              formData.append(\"name\", _this.state.title);\n              _context5.next = 7;\n              return _regeneratorRuntime.awrap(axios({\n                method: \"post\",\n                url: \"https://api.imgur.com/3/image\",\n                data: formData,\n                headers: {\n                  authorization: \"Client-ID 8d1d1c33ea509f6\"\n                }\n              }));\n\n            case 7:\n              _ref3 = _context5.sent;\n              data = _ref3.data;\n              memeTypes = _this.state.memeTypes;\n              index = memeTypes.indexOf(_this.state.text);\n\n              if (index == -1) {\n                memeTypes.push(_this.state.text);\n              }\n\n              index = memeTypes.indexOf(_this.state.text);\n              img = new Image();\n              img.crossOrigin = \"anonymous\";\n\n              img.onload = function _callee4() {\n                return _regeneratorRuntime.async(function _callee4$(_context4) {\n                  while (1) {\n                    switch (_context4.prev = _context4.next) {\n                      case 0:\n                        _context4.next = 2;\n                        return _regeneratorRuntime.awrap(regressor.addImage(img, index));\n\n                      case 2:\n                      case \"end\":\n                        return _context4.stop();\n                    }\n                  }\n                });\n              };\n\n              img.src = data.data.link;\n              img.width = 250;\n              img.height = 250;\n              newData.push({\n                name: _this.state.text,\n                uri: data.data.link\n              });\n              _context5.next = 22;\n              return _regeneratorRuntime.awrap(firebase.database().ref().set({\n                data: newData,\n                types: memeTypes\n              }));\n\n            case 22:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onTextChange\", function (event) {\n      _this.setState({\n        text: event.target.value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderCards\", function () {\n      return _this.state.memeTypes.map(function (meme, index) {\n        return __jsx(_Card, {\n          hoverable: true,\n          key: meme,\n          style: {\n            width: \"12vw\",\n            borderColor: meme == _this.state.prediction ? \"#00e676\" : null\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 204\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          style: {\n            color: \"black\",\n            fontSize: \"0.8vw\",\n            fontWeight: \"bold\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212\n          },\n          __self: this\n        }, meme), __jsx(\"div\", {\n          style: {\n            color: \"black\",\n            fontSize: \"0.8vw\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217\n          },\n          __self: this\n        }, \"\".concat(_this.state.memeCount[index] ? _this.state.memeCount[index] : 0, \" Images\")));\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var snapshot, result, memeTypes, counter;\n      return _regeneratorRuntime.async(function componentDidMount$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              if (firebase.apps.length) {\n                _context7.next = 3;\n                break;\n              }\n\n              _context7.next = 3;\n              return _regeneratorRuntime.awrap(firebase.initializeApp(this.props.config));\n\n            case 3:\n              _context7.next = 5;\n              return _regeneratorRuntime.awrap(firebase.database().ref().once(\"value\"));\n\n            case 5:\n              snapshot = _context7.sent;\n              _context7.next = 8;\n              return _regeneratorRuntime.awrap(snapshot.val());\n\n            case 8:\n              result = _context7.sent;\n              memeTypes = result.types;\n              counter = 0;\n              this.setState({\n                images: result.data,\n                memeTypes: memeTypes\n              });\n              result.data.map(function (image) {\n                var index = memeTypes.indexOf(image.name);\n                var newMemeCount = _this2.state.memeCount;\n\n                if (newMemeCount[index]) {\n                  newMemeCount[index]++;\n                } else {\n                  newMemeCount[index] = 1;\n                }\n\n                _this2.setState({\n                  memeCount: newMemeCount\n                });\n\n                var img = new Image();\n                img.crossOrigin = \"anonymous\";\n\n                img.onload = function _callee6() {\n                  return _regeneratorRuntime.async(function _callee6$(_context6) {\n                    while (1) {\n                      switch (_context6.prev = _context6.next) {\n                        case 0:\n                          _context6.next = 2;\n                          return _regeneratorRuntime.awrap(regressor.addImage(img, index));\n\n                        case 2:\n                          counter++;\n\n                          if (counter == result.data.length - 1) {\n                            _this2.setState({\n                              loading: false\n                            });\n                          }\n\n                        case 4:\n                        case \"end\":\n                          return _context6.stop();\n                      }\n                    }\n                  });\n                };\n\n                img.src = image.uri;\n                img.width = 250;\n                img.height = 250;\n              });\n\n            case 13:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, null, this);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return __jsx(\"div\", {\n        style: {\n          display: \"flex\",\n          alignItems: \"center\",\n          flexDirection: \"column\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        style: {\n          backgroundColor: \"black\",\n          postition: \"absolute\",\n          top: 0,\n          width: \"100vw\",\n          height: \"50vh\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }), __jsx(\"div\", {\n        style: {\n          position: \"absolute\",\n          top: 0,\n          width: \"60%\",\n          marginTop: \"1vh\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"space-between\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        style: {\n          display: \"flex\",\n          alignItems: \"row\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, __jsx(_Icon, {\n        type: \"area-chart\",\n        style: {\n          fontSize: \"2vw\",\n          display: \"flex\",\n          alignItems: \"center\",\n          color: \"white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }), __jsx(\"div\", {\n        style: {\n          fontSize: \"2vw\",\n          fontWeight: \"bold\",\n          color: \"white\",\n          marginLeft: \"0.5vw\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }, \"MemeDB\")), __jsx(\"div\", {\n        style: {\n          color: \"white\",\n          display: \"flex\",\n          alignItems: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }, \"Memes Known: \".concat(this.state.memeTypes.length))), __jsx(\"div\", {\n        style: {\n          fontSize: \"6vw\",\n          fontWeight: \"bold\",\n          color: \"white\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          marginTop: \"10vh\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }, \"Meme Classifier\")), !this.state.loading ? __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"space-evenly\",\n          width: \"100%\",\n          marginTop: \"2vh\",\n          marginBottom: \"2vh\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        style: {\n          fontWeight: \"bold\",\n          fontSize: \"3vw\",\n          color: \"black\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      }, \"Training Data\"), __jsx(_Input, {\n        onChange: this.onTextChange,\n        value: this.state.text,\n        placeholder: \"Meme name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      }), __jsx(_Button, {\n        style: {\n          marginTop: \"2vh\",\n          backgroundColor: \"black\",\n          color: \"white\"\n        },\n        onClick: this.handleAdd,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333\n        },\n        __self: this\n      }, __jsx(_Icon, {\n        type: \"plus\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341\n        },\n        __self: this\n      }), \"Add Image\")), __jsx(\"div\", {\n        style: {\n          width: \"30%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346\n        },\n        __self: this\n      }, __jsx(Dragger, {\n        showUploadList: false,\n        onChange: function onChange(event) {\n          _this3.setState({\n            image: event.fileList[event.fileList.length - 1].originFileObj\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347\n        },\n        __self: this\n      }, __jsx(\"p\", {\n        className: \"ant-upload-drag-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356\n        },\n        __self: this\n      }, __jsx(_Icon, {\n        type: \"inbox\",\n        style: {\n          color: \"black\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357\n        },\n        __self: this\n      })), __jsx(\"p\", {\n        className: \"ant-upload-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359\n        },\n        __self: this\n      }, \"Click or drag file to this area to upload\"), __jsx(\"p\", {\n        className: \"ant-upload-hint\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362\n        },\n        __self: this\n      }, \"Support for a single or bulk upload. Strictly prohibit from uploading company data or other band files\")))), __jsx(\"div\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"row\",\n          width: \"100vw\",\n          justifyContent: \"space-evenly\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369\n        },\n        __self: this\n      }, this.renderCards()), __jsx(\"div\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"row\",\n          marginTop: \"2vh\",\n          marginBottom: \"2vh\",\n          justifyContent: \"space-evenly\",\n          width: \"100vw\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        style: {\n          fontWeight: \"bold\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397\n        },\n        __self: this\n      }, \"Loss\"), __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398\n        },\n        __self: this\n      }, this.state.loss)), __jsx(_Button, {\n        style: {\n          backgroundColor: \"black\"\n        },\n        onClick: this.handleTrain,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407\n        },\n        __self: this\n      }, __jsx(_Icon, {\n        type: \"sliders\",\n        style: {\n          color: \"white\",\n          marginRight: \"0.5vw\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 415\n        },\n        __self: this\n      }), __jsx(\"div\", {\n        style: {\n          color: \"white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422\n        },\n        __self: this\n      }, \"Train\")))), __jsx(\"div\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"row\",\n          width: \"100%\",\n          justifyContent: \"space-evenly\",\n          marginBottom: \"2vh\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 426\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        style: {\n          width: \"30%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 435\n        },\n        __self: this\n      }, __jsx(Dragger, {\n        showUploadList: false,\n        onChange: function onChange(event) {\n          _this3.setState({\n            targetImage: event.fileList[event.fileList.length - 1].originFileObj\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 436\n        },\n        __self: this\n      }, __jsx(\"p\", {\n        className: \"ant-upload-drag-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 445\n        },\n        __self: this\n      }, __jsx(_Icon, {\n        type: \"inbox\",\n        style: {\n          color: \"black\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 446\n        },\n        __self: this\n      })), __jsx(\"p\", {\n        className: \"ant-upload-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 448\n        },\n        __self: this\n      }, \"Click or drag file to this area to upload\"), __jsx(\"p\", {\n        className: \"ant-upload-hint\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 451\n        },\n        __self: this\n      }, \"Support for a single or bulk upload. Strictly prohibit from uploading company data or other band files\"))), __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 458\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        style: {\n          fontWeight: \"bold\",\n          fontSize: \"3vw\",\n          color: \"black\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 459\n        },\n        __self: this\n      }, \"Target Data\"), __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 469\n        },\n        __self: this\n      }, \"Regression: \".concat(this.state.response), \" \"), __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 470\n        },\n        __self: this\n      }, \"Prediction: \".concat(this.state.prediction)), __jsx(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"space-evenly\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 472\n        },\n        __self: this\n      }, __jsx(_Button, {\n        style: {\n          marginTop: \"2vh\",\n          backgroundColor: \"black\",\n          color: \"white\"\n        },\n        onClick: this.handleUpload,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 475\n        },\n        __self: this\n      }, __jsx(_Icon, {\n        type: \"plus\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 483\n        },\n        __self: this\n      }), \"Add Image\"), __jsx(_Button, {\n        style: {\n          marginTop: \"2vh\",\n          color: \"black\"\n        },\n        onClick: this.handleIdentify,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 486\n        },\n        __self: this\n      }, __jsx(_Icon, {\n        type: \"eye\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 493\n        },\n        __self: this\n      }), \"Predict\"))))) : __jsx(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          height: \"50vh\",\n          weight: \"100vw\",\n          flexDirection: \"column\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 501\n        },\n        __self: this\n      }, __jsx(ClimbingBoxLoader, {\n        style: {\n          width: \"20vw\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 511\n        },\n        __self: this\n      }), __jsx(\"div\", {\n        style: {\n          fontSize: \"1.2vw\",\n          fontWeight: \"bold\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 512\n        },\n        __self: this\n      }, \"Loading\")));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(_ref4) {\n      var store, query, isServer, test, config;\n      return _regeneratorRuntime.async(function getInitialProps$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              store = _ref4.store, query = _ref4.query, isServer = _ref4.isServer, test = _ref4.test;\n              config = {\n                apiKey: process.env.apiKey,\n                authDomain: process.env.authDomain,\n                databaseURL: process.env.databaseURL,\n                projectId: process.env.projectId,\n                storageBucket: process.env.storageBucket,\n                messagingSenderId: process.env.messagingSenderId\n              };\n              return _context8.abrupt(\"return\", {\n                config: config\n              });\n\n            case 3:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      });\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/jackieni/dev/personal/meme-database/pages/index.js"],"names":["React","Component","axios","ml5","featureExtractor","regressor","Dragger","firebase","ClimbingBoxLoader","require","version","alpha","topk","learningRate","hiddenUnits","epochs","numClasses","batchSize","regression","App","text","targetUri","image","targetImage","memeTypes","images","memeCount","response","prediction","loading","loss","train","lossValue","setState","e","state","formData","FormData","append","method","url","data","headers","authorization","link","img","Image","crossOrigin","onload","predict","value","Math","round","length","src","width","height","event","newData","title","index","indexOf","push","addImage","name","uri","database","ref","set","types","target","map","meme","borderColor","color","fontSize","fontWeight","apps","initializeApp","props","config","once","snapshot","val","result","counter","newMemeCount","display","alignItems","flexDirection","backgroundColor","postition","top","position","marginTop","justifyContent","marginLeft","marginBottom","onTextChange","handleAdd","fileList","originFileObj","renderCards","handleTrain","marginRight","handleUpload","handleIdentify","weight","store","query","isServer","test","apiKey","process","env","authDomain","databaseURL","projectId","storageBucket","messagingSenderId"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,IAAIC,GAAJ;AACA,IAAIC,gBAAJ;AACA,IAAIC,SAAJ;AACA,IAAMC,OAAO,GAAG,QAAOA,OAAvB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,SAASC,iBAAT,QAAkC,gBAAlC;;AAEA,UAAmC;AACjCL,EAAAA,GAAG,GAAGM,OAAO,CAAC,KAAD,CAAb;AACAL,EAAAA,gBAAgB,GAAGD,GAAG,CAACC,gBAAJ,CAAqB,WAArB,EAAkC,YAAM,CAAE,CAA1C,EAA4C;AAC7DM,IAAAA,OAAO,EAAE,CADoD;AAE7DC,IAAAA,KAAK,EAAE,GAFsD;AAG7DC,IAAAA,IAAI,EAAE,CAHuD;AAI7DC,IAAAA,YAAY,EAAE,MAJ+C;AAK7DC,IAAAA,WAAW,EAAE,GALgD;AAM7DC,IAAAA,MAAM,EAAE,EANqD;AAO7DC,IAAAA,UAAU,EAAE,CAPiD;AAQ7DC,IAAAA,SAAS,EAAE;AARkD,GAA5C,CAAnB;AAUAZ,EAAAA,SAAS,GAAGD,gBAAgB,CAACc,UAAjB,EAAZ;AACD;;IAEKC,G;;;;;;;;;;;;;;;;;;4DACI;AACNC,MAAAA,IAAI,EAAE,EADA;AAENC,MAAAA,SAAS,EAAE,EAFL;AAGNC,MAAAA,KAAK,EAAE,EAHD;AAINC,MAAAA,WAAW,EAAE,EAJP;AAKNC,MAAAA,SAAS,EAAE,EALL;AAMNC,MAAAA,MAAM,EAAE,EANF;AAONC,MAAAA,SAAS,EAAE,EAPL;AAQNC,MAAAA,QAAQ,EAAE,EARJ;AASNC,MAAAA,UAAU,EAAE,EATN;AAUNC,MAAAA,OAAO,EAAE,IAVH;AAWNC,MAAAA,IAAI,EAAE;AAXA,K;;kEA2EM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACNzB,SAAS,CAAC0B,KAAV,CAAgB,UAAAC,SAAS,EAAI;AACjC,oBAAIA,SAAJ,EAAe;AACb,sBAAIF,IAAI,GAAGE,SAAX;;AACA,wBAAKC,QAAL,CAAc;AAAEH,oBAAAA,IAAI,EAAJA;AAAF,mBAAd;AACD,iBAHD,MAGO;AACL,wBAAKG,QAAL,CAAc;AAAEH,oBAAAA,IAAI,EAAE;AAAR,mBAAd;AACD;AACF,eAPK,CADM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;mEAWC;AAAA;;AAAA;AAAA;AAAA;AAAA;AACb,oBAAKG,QAAL,CAAc;AAAEN,gBAAAA,QAAQ,EAAE,EAAZ;AAAgBC,gBAAAA,UAAU,EAAE;AAA5B,eAAd;;AACMM,cAAAA,CAFO,GAEH,MAAKC,KAAL,CAAWZ,WAFR;AAGTa,cAAAA,QAHS,GAGE,IAAIC,QAAJ,EAHF;AAIbD,cAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBJ,CAAzB;AAJa;AAAA,+CAMUhC,KAAK,CAAC;AAC3BqC,gBAAAA,MAAM,EAAE,MADmB;AAE3BC,gBAAAA,GAAG,EAAE,+BAFsB;AAG3BC,gBAAAA,IAAI,EAAEL,QAHqB;AAI3BM,gBAAAA,OAAO,EAAE;AACPC,kBAAAA,aAAa,EAAE;AADR;AAJkB,eAAD,CANf;;AAAA;AAAA;AAMLF,cAAAA,IANK,QAMLA,IANK;;AAeb,oBAAKR,QAAL,CAAc;AACZZ,gBAAAA,SAAS,EAAEoB,IAAI,CAACA,IAAL,CAAUG;AADT,eAAd;;AAfa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;qEAoBE,YAAM;AACrB,UAAMC,GAAG,GAAG,IAAIC,KAAJ,EAAZ;AACAD,MAAAA,GAAG,CAACE,WAAJ,GAAkB,WAAlB;;AACAF,MAAAA,GAAG,CAACG,MAAJ,GAAa;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDACa3C,SAAS,CAAC4C,OAAV,CAAkBJ,GAAlB,CADb;;AAAA;AAAA;AACHK,gBAAAA,KADG,SACHA,KADG;;AAEX,sBAAKjB,QAAL,CAAc;AACZN,kBAAAA,QAAQ,EAAEuB,KADE;AAEZtB,kBAAAA,UAAU,EAAE,MAAKO,KAAL,CAAWX,SAAX,CACV2B,IAAI,CAACC,KAAL,CAAWF,KAAX,IAAoB,MAAKf,KAAL,CAAWX,SAAX,CAAqB6B,MAArB,GAA8B,CAAlD,GACI,MAAKlB,KAAL,CAAWX,SAAX,CAAqB6B,MAArB,GAA8B,CADlC,GAEIF,IAAI,CAACC,KAAL,CAAWF,KAAX,CAHM;AAFA,iBAAd;;AAFW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAb;;AAWAL,MAAAA,GAAG,CAACS,GAAJ,GAAU,MAAKnB,KAAL,CAAWd,SAArB;AACAwB,MAAAA,GAAG,CAACU,KAAJ,GAAY,GAAZ;AACAV,MAAAA,GAAG,CAACW,MAAJ,GAAa,GAAb;AACD,K;;gEAEW,kBAAMC,KAAN;AAAA;;AAAA;AAAA;AAAA;AAAA;AACJvB,cAAAA,CADI,GACA,MAAKC,KAAL,CAAWb,KADX;AAEJoC,cAAAA,OAFI,GAEM,MAAKvB,KAAL,CAAWV,MAFjB;AAINW,cAAAA,QAJM,GAIK,IAAIC,QAAJ,EAJL;AAKVD,cAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBJ,CAAzB;AACAE,cAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwB,MAAKH,KAAL,CAAWwB,KAAnC;AANU;AAAA,+CAQazD,KAAK,CAAC;AAC3BqC,gBAAAA,MAAM,EAAE,MADmB;AAE3BC,gBAAAA,GAAG,EAAE,+BAFsB;AAG3BC,gBAAAA,IAAI,EAAEL,QAHqB;AAI3BM,gBAAAA,OAAO,EAAE;AACPC,kBAAAA,aAAa,EAAE;AADR;AAJkB,eAAD,CARlB;;AAAA;AAAA;AAQFF,cAAAA,IARE,SAQFA,IARE;AAiBNjB,cAAAA,SAjBM,GAiBM,MAAKW,KAAL,CAAWX,SAjBjB;AAmBNoC,cAAAA,KAnBM,GAmBEpC,SAAS,CAACqC,OAAV,CAAkB,MAAK1B,KAAL,CAAWf,IAA7B,CAnBF;;AAoBV,kBAAIwC,KAAK,IAAI,CAAC,CAAd,EAAiB;AACfpC,gBAAAA,SAAS,CAACsC,IAAV,CAAe,MAAK3B,KAAL,CAAWf,IAA1B;AACD;;AACDwC,cAAAA,KAAK,GAAGpC,SAAS,CAACqC,OAAV,CAAkB,MAAK1B,KAAL,CAAWf,IAA7B,CAAR;AAEMyB,cAAAA,GAzBI,GAyBE,IAAIC,KAAJ,EAzBF;AA0BVD,cAAAA,GAAG,CAACE,WAAJ,GAAkB,WAAlB;;AACAF,cAAAA,GAAG,CAACG,MAAJ,GAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yDACL3C,SAAS,CAAC0D,QAAV,CAAmBlB,GAAnB,EAAwBe,KAAxB,CADK;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAb;;AAGAf,cAAAA,GAAG,CAACS,GAAJ,GAAUb,IAAI,CAACA,IAAL,CAAUG,IAApB;AACAC,cAAAA,GAAG,CAACU,KAAJ,GAAY,GAAZ;AACAV,cAAAA,GAAG,CAACW,MAAJ,GAAa,GAAb;AAEAE,cAAAA,OAAO,CAACI,IAAR,CAAa;AACXE,gBAAAA,IAAI,EAAE,MAAK7B,KAAL,CAAWf,IADN;AAEX6C,gBAAAA,GAAG,EAAExB,IAAI,CAACA,IAAL,CAAUG;AAFJ,eAAb;AAlCU;AAAA,+CAuCJrC,QAAQ,CACX2D,QADG,GAEHC,GAFG,GAGHC,GAHG,CAGC;AAAE3B,gBAAAA,IAAI,EAAEiB,OAAR;AAAiBW,gBAAAA,KAAK,EAAE7C;AAAxB,eAHD,CAvCI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;mEA6CG,UAAAiC,KAAK,EAAI;AACtB,YAAKxB,QAAL,CAAc;AAAEb,QAAAA,IAAI,EAAEqC,KAAK,CAACa,MAAN,CAAapB;AAArB,OAAd;AACD,K;;kEAEa,YAAM;AAClB,aAAO,MAAKf,KAAL,CAAWX,SAAX,CAAqB+C,GAArB,CAAyB,UAACC,IAAD,EAAOZ,KAAP,EAAiB;AAC/C,eACE;AACE,UAAA,SAAS,MADX;AAEE,UAAA,GAAG,EAAEY,IAFP;AAGE,UAAA,KAAK,EAAE;AACLjB,YAAAA,KAAK,EAAE,MADF;AAELkB,YAAAA,WAAW,EAAED,IAAI,IAAI,MAAKrC,KAAL,CAAWP,UAAnB,GAAgC,SAAhC,GAA4C;AAFpD,WAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAQE;AACE,UAAA,KAAK,EAAE;AAAE8C,YAAAA,KAAK,EAAE,OAAT;AAAkBC,YAAAA,QAAQ,EAAE,OAA5B;AAAqCC,YAAAA,UAAU,EAAE;AAAjD,WADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAGGJ,IAHH,CARF,EAaE;AAAK,UAAA,KAAK,EAAE;AAAEE,YAAAA,KAAK,EAAE,OAAT;AAAkBC,YAAAA,QAAQ,EAAE;AAA5B,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEI,MAAKxC,KAAL,CAAWT,SAAX,CAAqBkC,KAArB,IAA8B,MAAKzB,KAAL,CAAWT,SAAX,CAAqBkC,KAArB,CAA9B,GAA4D,CAFhE,aAbF,CADF;AAqBD,OAtBM,CAAP;AAuBD,K;;;;;;;;;;;;;;;kBAxKMrD,QAAQ,CAACsE,IAAT,CAAcxB,M;;;;;;+CACX9C,QAAQ,CAACuE,aAAT,CAAuB,KAAKC,KAAL,CAAWC,MAAlC,C;;;;+CAGezE,QAAQ,CAC5B2D,QADoB,GAEpBC,GAFoB,GAGpBc,IAHoB,CAGf,OAHe,C;;;AAAjBC,cAAAA,Q;;+CAIeA,QAAQ,CAACC,GAAT,E;;;AAAfC,cAAAA,M;AACA5D,cAAAA,S,GAAY4D,MAAM,CAACf,K;AAErBgB,cAAAA,O,GAAU,C;AACd,mBAAKpD,QAAL,CAAc;AACZR,gBAAAA,MAAM,EAAE2D,MAAM,CAAC3C,IADH;AAEZjB,gBAAAA,SAAS,EAATA;AAFY,eAAd;AAKA4D,cAAAA,MAAM,CAAC3C,IAAP,CAAY8B,GAAZ,CAAgB,UAAAjD,KAAK,EAAI;AACvB,oBAAMsC,KAAK,GAAGpC,SAAS,CAACqC,OAAV,CAAkBvC,KAAK,CAAC0C,IAAxB,CAAd;AACA,oBAAMsB,YAAY,GAAG,MAAI,CAACnD,KAAL,CAAWT,SAAhC;;AACA,oBAAI4D,YAAY,CAAC1B,KAAD,CAAhB,EAAyB;AACvB0B,kBAAAA,YAAY,CAAC1B,KAAD,CAAZ;AACD,iBAFD,MAEO;AACL0B,kBAAAA,YAAY,CAAC1B,KAAD,CAAZ,GAAsB,CAAtB;AACD;;AAED,gBAAA,MAAI,CAAC3B,QAAL,CAAc;AACZP,kBAAAA,SAAS,EAAE4D;AADC,iBAAd;;AAIA,oBAAMzC,GAAG,GAAG,IAAIC,KAAJ,EAAZ;AACAD,gBAAAA,GAAG,CAACE,WAAJ,GAAkB,WAAlB;;AACAF,gBAAAA,GAAG,CAACG,MAAJ,GAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2DACL3C,SAAS,CAAC0D,QAAV,CAAmBlB,GAAnB,EAAwBe,KAAxB,CADK;;AAAA;AAEXyB,0BAAAA,OAAO;;AACP,8BAAIA,OAAO,IAAID,MAAM,CAAC3C,IAAP,CAAYY,MAAZ,GAAqB,CAApC,EAAuC;AACrC,4BAAA,MAAI,CAACpB,QAAL,CAAc;AAAEJ,8BAAAA,OAAO,EAAE;AAAX,6BAAd;AACD;;AALU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAb;;AAOAgB,gBAAAA,GAAG,CAACS,GAAJ,GAAUhC,KAAK,CAAC2C,GAAhB;AACApB,gBAAAA,GAAG,CAACU,KAAJ,GAAY,GAAZ;AACAV,gBAAAA,GAAG,CAACW,MAAJ,GAAa,GAAb;AACD,eAzBD;;;;;;;;;;;6BAyJO;AAAA;;AACP,aACE;AACE,QAAA,KAAK,EAAE;AACL+B,UAAAA,OAAO,EAAE,MADJ;AAELC,UAAAA,UAAU,EAAE,QAFP;AAGLC,UAAAA,aAAa,EAAE;AAHV,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOE;AACE,QAAA,KAAK,EAAE;AACLC,UAAAA,eAAe,EAAE,OADZ;AAELC,UAAAA,SAAS,EAAE,UAFN;AAGLC,UAAAA,GAAG,EAAE,CAHA;AAILrC,UAAAA,KAAK,EAAE,OAJF;AAKLC,UAAAA,MAAM,EAAE;AALH,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,EAiBE;AACE,QAAA,KAAK,EAAE;AACLqC,UAAAA,QAAQ,EAAE,UADL;AAELD,UAAAA,GAAG,EAAE,CAFA;AAGLrC,UAAAA,KAAK,EAAE,KAHF;AAILuC,UAAAA,SAAS,EAAE;AAJN,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQE;AACE,QAAA,KAAK,EAAE;AACLP,UAAAA,OAAO,EAAE,MADJ;AAELE,UAAAA,aAAa,EAAE,KAFV;AAGLM,UAAAA,cAAc,EAAE;AAHX,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOE;AAAK,QAAA,KAAK,EAAE;AAAER,UAAAA,OAAO,EAAE,MAAX;AAAmBC,UAAAA,UAAU,EAAE;AAA/B,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,IAAI,EAAC,YADP;AAEE,QAAA,KAAK,EAAE;AACLb,UAAAA,QAAQ,EAAE,KADL;AAELY,UAAAA,OAAO,EAAE,MAFJ;AAGLC,UAAAA,UAAU,EAAE,QAHP;AAILd,UAAAA,KAAK,EAAE;AAJF,SAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAUE;AACE,QAAA,KAAK,EAAE;AACLC,UAAAA,QAAQ,EAAE,KADL;AAELC,UAAAA,UAAU,EAAE,MAFP;AAGLF,UAAAA,KAAK,EAAE,OAHF;AAILsB,UAAAA,UAAU,EAAE;AAJP,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVF,CAPF,EA6BE;AACE,QAAA,KAAK,EAAE;AAAEtB,UAAAA,KAAK,EAAE,OAAT;AAAkBa,UAAAA,OAAO,EAAE,MAA3B;AAAmCC,UAAAA,UAAU,EAAE;AAA/C,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAGmB,KAAKrD,KAAL,CAAWX,SAAX,CAAqB6B,MAHxC,EA7BF,CARF,EA4CE;AACE,QAAA,KAAK,EAAE;AACLsB,UAAAA,QAAQ,EAAE,KADL;AAELC,UAAAA,UAAU,EAAE,MAFP;AAGLF,UAAAA,KAAK,EAAE,OAHF;AAILa,UAAAA,OAAO,EAAE,MAJJ;AAKLQ,UAAAA,cAAc,EAAE,QALX;AAMLD,UAAAA,SAAS,EAAE;AANN,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BA5CF,CAjBF,EA2EG,CAAC,KAAK3D,KAAL,CAAWN,OAAZ,GACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,KAAK,EAAE;AACL0D,UAAAA,OAAO,EAAE,MADJ;AAELE,UAAAA,aAAa,EAAE,KAFV;AAGLM,UAAAA,cAAc,EAAE,cAHX;AAILxC,UAAAA,KAAK,EAAE,MAJF;AAKLuC,UAAAA,SAAS,EAAE,KALN;AAMLG,UAAAA,YAAY,EAAE;AANT,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,KAAK,EAAE;AACLrB,UAAAA,UAAU,EAAE,MADP;AAELD,UAAAA,QAAQ,EAAE,KAFL;AAGLD,UAAAA,KAAK,EAAE;AAHF,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,EAWE;AACE,QAAA,QAAQ,EAAE,KAAKwB,YADjB;AAEE,QAAA,KAAK,EAAE,KAAK/D,KAAL,CAAWf,IAFpB;AAGE,QAAA,WAAW,EAAC,WAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXF,EAiBE;AACE,QAAA,KAAK,EAAE;AACL0E,UAAAA,SAAS,EAAE,KADN;AAELJ,UAAAA,eAAe,EAAE,OAFZ;AAGLhB,UAAAA,KAAK,EAAE;AAHF,SADT;AAME,QAAA,OAAO,EAAE,KAAKyB,SANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQE;AAAM,QAAA,IAAI,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARF,cAjBF,CAVF,EAwCE;AAAK,QAAA,KAAK,EAAE;AAAE5C,UAAAA,KAAK,EAAE;AAAT,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,OAAD;AACE,QAAA,cAAc,EAAE,KADlB;AAEE,QAAA,QAAQ,EAAE,kBAAAE,KAAK,EAAI;AACjB,UAAA,MAAI,CAACxB,QAAL,CAAc;AACZX,YAAAA,KAAK,EACHmC,KAAK,CAAC2C,QAAN,CAAe3C,KAAK,CAAC2C,QAAN,CAAe/C,MAAf,GAAwB,CAAvC,EAA0CgD;AAFhC,WAAd;AAID,SAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SASE;AAAG,QAAA,SAAS,EAAC,sBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,IAAI,EAAC,OAAX;AAAmB,QAAA,KAAK,EAAE;AAAE3B,UAAAA,KAAK,EAAE;AAAT,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CATF,EAYE;AAAG,QAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qDAZF,EAeE;AAAG,QAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kHAfF,CADF,CAxCF,CADF,EAgEE;AACE,QAAA,KAAK,EAAE;AACLa,UAAAA,OAAO,EAAE,MADJ;AAELE,UAAAA,aAAa,EAAE,KAFV;AAGLlC,UAAAA,KAAK,EAAE,OAHF;AAILwC,UAAAA,cAAc,EAAE;AAJX,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQG,KAAKO,WAAL,EARH,CAhEF,EA0EE;AACE,QAAA,KAAK,EAAE;AACLf,UAAAA,OAAO,EAAE,MADJ;AAELE,UAAAA,aAAa,EAAE,KAFV;AAGLK,UAAAA,SAAS,EAAE,KAHN;AAILG,UAAAA,YAAY,EAAE,KAJT;AAKLF,UAAAA,cAAc,EAAE,cALX;AAMLxC,UAAAA,KAAK,EAAE;AANF,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAUE;AACE,QAAA,KAAK,EAAE;AACLgC,UAAAA,OAAO,EAAE,MADJ;AAELE,UAAAA,aAAa,EAAE,QAFV;AAGLM,UAAAA,cAAc,EAAE,QAHX;AAILP,UAAAA,UAAU,EAAE;AAJP,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQE;AAAK,QAAA,KAAK,EAAE;AAAEZ,UAAAA,UAAU,EAAE;AAAd,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAM,KAAKzC,KAAL,CAAWL,IAAjB,CATF,CAVF,EAsBE;AACE,QAAA,KAAK,EAAE;AACL4D,UAAAA,eAAe,EAAE;AADZ,SADT;AAIE,QAAA,OAAO,EAAE,KAAKa,WAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAME;AACE,QAAA,KAAK,EAAE;AACLhB,UAAAA,OAAO,EAAE,MADJ;AAELE,UAAAA,aAAa,EAAE,KAFV;AAGLM,UAAAA,cAAc,EAAE,QAHX;AAILP,UAAAA,UAAU,EAAE;AAJP,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQE;AACE,QAAA,IAAI,EAAC,SADP;AAEE,QAAA,KAAK,EAAE;AACLd,UAAAA,KAAK,EAAE,OADF;AAEL8B,UAAAA,WAAW,EAAE;AAFR,SAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARF,EAeE;AAAK,QAAA,KAAK,EAAE;AAAE9B,UAAAA,KAAK,EAAE;AAAT,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAfF,CANF,CAtBF,CA1EF,EAyHE;AACE,QAAA,KAAK,EAAE;AACLa,UAAAA,OAAO,EAAE,MADJ;AAELE,UAAAA,aAAa,EAAE,KAFV;AAGLlC,UAAAA,KAAK,EAAE,MAHF;AAILwC,UAAAA,cAAc,EAAE,cAJX;AAKLE,UAAAA,YAAY,EAAE;AALT,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SASE;AAAK,QAAA,KAAK,EAAE;AAAE1C,UAAAA,KAAK,EAAE;AAAT,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,OAAD;AACE,QAAA,cAAc,EAAE,KADlB;AAEE,QAAA,QAAQ,EAAE,kBAAAE,KAAK,EAAI;AACjB,UAAA,MAAI,CAACxB,QAAL,CAAc;AACZV,YAAAA,WAAW,EACTkC,KAAK,CAAC2C,QAAN,CAAe3C,KAAK,CAAC2C,QAAN,CAAe/C,MAAf,GAAwB,CAAvC,EAA0CgD;AAFhC,WAAd;AAID,SAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SASE;AAAG,QAAA,SAAS,EAAC,sBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,IAAI,EAAC,OAAX;AAAmB,QAAA,KAAK,EAAE;AAAE3B,UAAAA,KAAK,EAAE;AAAT,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CATF,EAYE;AAAG,QAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qDAZF,EAeE;AAAG,QAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kHAfF,CADF,CATF,EAgCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,KAAK,EAAE;AACLE,UAAAA,UAAU,EAAE,MADP;AAELD,UAAAA,QAAQ,EAAE,KAFL;AAGLD,UAAAA,KAAK,EAAE;AAHF,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAqB,KAAKvC,KAAL,CAAWR,QAAhC,OAXF,EAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAqB,KAAKQ,KAAL,CAAWP,UAAhC,EAZF,EAcE;AACE,QAAA,KAAK,EAAE;AAAE2D,UAAAA,OAAO,EAAE,MAAX;AAAmBQ,UAAAA,cAAc,EAAE;AAAnC,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGE;AACE,QAAA,KAAK,EAAE;AACLD,UAAAA,SAAS,EAAE,KADN;AAELJ,UAAAA,eAAe,EAAE,OAFZ;AAGLhB,UAAAA,KAAK,EAAE;AAHF,SADT;AAME,QAAA,OAAO,EAAE,KAAK+B,YANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQE;AAAM,QAAA,IAAI,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARF,cAHF,EAcE;AACE,QAAA,KAAK,EAAE;AACLX,UAAAA,SAAS,EAAE,KADN;AAELpB,UAAAA,KAAK,EAAE;AAFF,SADT;AAKE,QAAA,OAAO,EAAE,KAAKgC,cALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOE;AAAM,QAAA,IAAI,EAAC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,YAdF,CAdF,CAhCF,CAzHF,CADD,GAqMC;AACE,QAAA,KAAK,EAAE;AACLnB,UAAAA,OAAO,EAAE,MADJ;AAELQ,UAAAA,cAAc,EAAE,QAFX;AAGLP,UAAAA,UAAU,EAAE,QAHP;AAILhC,UAAAA,MAAM,EAAE,MAJH;AAKLmD,UAAAA,MAAM,EAAE,OALH;AAMLlB,UAAAA,aAAa,EAAE;AANV,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAUE,MAAC,iBAAD;AAAmB,QAAA,KAAK,EAAE;AAAElC,UAAAA,KAAK,EAAE;AAAT,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVF,EAWE;AAAK,QAAA,KAAK,EAAE;AAAEoB,UAAAA,QAAQ,EAAE,OAAZ;AAAqBC,UAAAA,UAAU,EAAE;AAAjC,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAXF,CAhRJ,CADF;AAiSD;;;;;;;;;AA5d8BgC,cAAAA,K,SAAAA,K,EAAOC,K,SAAAA,K,EAAOC,Q,SAAAA,Q,EAAUC,I,SAAAA,I;AAC/C/B,cAAAA,M,GAAS;AACbgC,gBAAAA,MAAM,EAAEC,OAAO,CAACC,GAAR,CAAYF,MADP;AAEbG,gBAAAA,UAAU,EAAEF,OAAO,CAACC,GAAR,CAAYC,UAFX;AAGbC,gBAAAA,WAAW,EAAEH,OAAO,CAACC,GAAR,CAAYE,WAHZ;AAIbC,gBAAAA,SAAS,EAAEJ,OAAO,CAACC,GAAR,CAAYG,SAJV;AAKbC,gBAAAA,aAAa,EAAEL,OAAO,CAACC,GAAR,CAAYI,aALd;AAMbC,gBAAAA,iBAAiB,EAAEN,OAAO,CAACC,GAAR,CAAYK;AANlB,e;gDASR;AACLvC,gBAAAA,MAAM,EAANA;AADK,e;;;;;;;;;;;;EAzBO/E,S;;AA8elB,eAAekB,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Button, Input, Icon, Upload, Card, Statistic, Row, Col } from \"antd\";\nimport axios from \"axios\";\nlet ml5;\nlet featureExtractor;\nlet regressor;\nconst Dragger = Upload.Dragger;\nimport firebase from \"firebase\";\nimport { ClimbingBoxLoader } from \"react-spinners\";\n\nif (typeof window !== \"undefined\") {\n  ml5 = require(\"ml5\");\n  featureExtractor = ml5.featureExtractor(\"MobileNet\", () => {}, {\n    version: 1,\n    alpha: 1.0,\n    topk: 3,\n    learningRate: 0.0001,\n    hiddenUnits: 100,\n    epochs: 20,\n    numClasses: 2,\n    batchSize: 0.4\n  });\n  regressor = featureExtractor.regression();\n}\n\nclass App extends Component {\n  state = {\n    text: \"\",\n    targetUri: \"\",\n    image: {},\n    targetImage: {},\n    memeTypes: [],\n    images: [],\n    memeCount: [],\n    response: \"\",\n    prediction: \"\",\n    loading: true,\n    loss: 0\n  };\n\n  static async getInitialProps({ store, query, isServer, test }) {\n    const config = {\n      apiKey: process.env.apiKey,\n      authDomain: process.env.authDomain,\n      databaseURL: process.env.databaseURL,\n      projectId: process.env.projectId,\n      storageBucket: process.env.storageBucket,\n      messagingSenderId: process.env.messagingSenderId\n    };\n\n    return {\n      config\n    };\n  }\n\n  async componentDidMount() {\n    if (!firebase.apps.length) {\n      await firebase.initializeApp(this.props.config);\n    }\n\n    const snapshot = await firebase\n      .database()\n      .ref()\n      .once(\"value\");\n    const result = await snapshot.val();\n    const memeTypes = result.types;\n\n    let counter = 0;\n    this.setState({\n      images: result.data,\n      memeTypes\n    });\n\n    result.data.map(image => {\n      const index = memeTypes.indexOf(image.name);\n      const newMemeCount = this.state.memeCount;\n      if (newMemeCount[index]) {\n        newMemeCount[index]++;\n      } else {\n        newMemeCount[index] = 1;\n      }\n\n      this.setState({\n        memeCount: newMemeCount\n      });\n\n      const img = new Image();\n      img.crossOrigin = \"anonymous\";\n      img.onload = async () => {\n        await regressor.addImage(img, index);\n        counter++;\n        if (counter == result.data.length - 1) {\n          this.setState({ loading: false });\n        }\n      };\n      img.src = image.uri;\n      img.width = 250;\n      img.height = 250;\n    });\n  }\n\n  handleTrain = async () => {\n    await regressor.train(lossValue => {\n      if (lossValue) {\n        let loss = lossValue;\n        this.setState({ loss });\n      } else {\n        this.setState({ loss: 0 });\n      }\n    });\n  };\n\n  handleUpload = async () => {\n    this.setState({ response: \"\", prediction: \"\" });\n    const e = this.state.targetImage;\n    var formData = new FormData();\n    formData.append(\"image\", e);\n\n    const { data } = await axios({\n      method: \"post\",\n      url: \"https://api.imgur.com/3/image\",\n      data: formData,\n      headers: {\n        authorization: \"Client-ID 7e4e554040292df\"\n      }\n    });\n\n    this.setState({\n      targetUri: data.data.link\n    });\n  };\n\n  handleIdentify = () => {\n    const img = new Image();\n    img.crossOrigin = \"anonymous\";\n    img.onload = async () => {\n      const { value } = await regressor.predict(img);\n      this.setState({\n        response: value,\n        prediction: this.state.memeTypes[\n          Math.round(value) > this.state.memeTypes.length - 1\n            ? this.state.memeTypes.length - 1\n            : Math.round(value)\n        ]\n      });\n    };\n    img.src = this.state.targetUri;\n    img.width = 250;\n    img.height = 250;\n  };\n\n  handleAdd = async event => {\n    const e = this.state.image;\n    const newData = this.state.images;\n\n    var formData = new FormData();\n    formData.append(\"image\", e);\n    formData.append(\"name\", this.state.title);\n\n    const { data } = await axios({\n      method: \"post\",\n      url: \"https://api.imgur.com/3/image\",\n      data: formData,\n      headers: {\n        authorization: \"Client-ID 8d1d1c33ea509f6\"\n      }\n    });\n\n    let memeTypes = this.state.memeTypes;\n\n    let index = memeTypes.indexOf(this.state.text);\n    if (index == -1) {\n      memeTypes.push(this.state.text);\n    }\n    index = memeTypes.indexOf(this.state.text);\n\n    const img = new Image();\n    img.crossOrigin = \"anonymous\";\n    img.onload = async () => {\n      await regressor.addImage(img, index);\n    };\n    img.src = data.data.link;\n    img.width = 250;\n    img.height = 250;\n\n    newData.push({\n      name: this.state.text,\n      uri: data.data.link\n    });\n\n    await firebase\n      .database()\n      .ref()\n      .set({ data: newData, types: memeTypes });\n  };\n\n  onTextChange = event => {\n    this.setState({ text: event.target.value });\n  };\n\n  renderCards = () => {\n    return this.state.memeTypes.map((meme, index) => {\n      return (\n        <Card\n          hoverable\n          key={meme}\n          style={{\n            width: \"12vw\",\n            borderColor: meme == this.state.prediction ? \"#00e676\" : null\n          }}\n        >\n          <div\n            style={{ color: \"black\", fontSize: \"0.8vw\", fontWeight: \"bold\" }}\n          >\n            {meme}\n          </div>\n          <div style={{ color: \"black\", fontSize: \"0.8vw\" }}>\n            {`${\n              this.state.memeCount[index] ? this.state.memeCount[index] : 0\n            } Images`}\n          </div>\n        </Card>\n      );\n    });\n  };\n\n  render() {\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          flexDirection: \"column\"\n        }}\n      >\n        <div\n          style={{\n            backgroundColor: \"black\",\n            postition: \"absolute\",\n            top: 0,\n            width: \"100vw\",\n            height: \"50vh\"\n          }}\n        />\n\n        <div\n          style={{\n            position: \"absolute\",\n            top: 0,\n            width: \"60%\",\n            marginTop: \"1vh\"\n          }}\n        >\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              justifyContent: \"space-between\"\n            }}\n          >\n            <div style={{ display: \"flex\", alignItems: \"row\" }}>\n              <Icon\n                type=\"area-chart\"\n                style={{\n                  fontSize: \"2vw\",\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  color: \"white\"\n                }}\n              />\n              <div\n                style={{\n                  fontSize: \"2vw\",\n                  fontWeight: \"bold\",\n                  color: \"white\",\n                  marginLeft: \"0.5vw\"\n                }}\n              >\n                MemeDB\n              </div>\n            </div>\n\n            <div\n              style={{ color: \"white\", display: \"flex\", alignItems: \"center\" }}\n            >\n              {`Memes Known: ${this.state.memeTypes.length}`}\n            </div>\n          </div>\n\n          <div\n            style={{\n              fontSize: \"6vw\",\n              fontWeight: \"bold\",\n              color: \"white\",\n              display: \"flex\",\n              justifyContent: \"center\",\n              marginTop: \"10vh\"\n            }}\n          >\n            Meme Classifier\n          </div>\n        </div>\n\n        {!this.state.loading ? (\n          <div>\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                justifyContent: \"space-evenly\",\n                width: \"100%\",\n                marginTop: \"2vh\",\n                marginBottom: \"2vh\"\n              }}\n            >\n              <div>\n                <div\n                  style={{\n                    fontWeight: \"bold\",\n                    fontSize: \"3vw\",\n                    color: \"black\"\n                  }}\n                >\n                  Training Data\n                </div>\n\n                <Input\n                  onChange={this.onTextChange}\n                  value={this.state.text}\n                  placeholder=\"Meme name\"\n                />\n\n                <Button\n                  style={{\n                    marginTop: \"2vh\",\n                    backgroundColor: \"black\",\n                    color: \"white\"\n                  }}\n                  onClick={this.handleAdd}\n                >\n                  <Icon type=\"plus\" />\n                  Add Image\n                </Button>\n              </div>\n\n              <div style={{ width: \"30%\" }}>\n                <Dragger\n                  showUploadList={false}\n                  onChange={event => {\n                    this.setState({\n                      image:\n                        event.fileList[event.fileList.length - 1].originFileObj\n                    });\n                  }}\n                >\n                  <p className=\"ant-upload-drag-icon\">\n                    <Icon type=\"inbox\" style={{ color: \"black\" }} />\n                  </p>\n                  <p className=\"ant-upload-text\">\n                    Click or drag file to this area to upload\n                  </p>\n                  <p className=\"ant-upload-hint\">\n                    Support for a single or bulk upload. Strictly prohibit from\n                    uploading company data or other band files\n                  </p>\n                </Dragger>\n              </div>\n            </div>\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                width: \"100vw\",\n                justifyContent: \"space-evenly\"\n              }}\n            >\n              {this.renderCards()}\n            </div>\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                marginTop: \"2vh\",\n                marginBottom: \"2vh\",\n                justifyContent: \"space-evenly\",\n                width: \"100vw\"\n              }}\n            >\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\"\n                }}\n              >\n                <div style={{ fontWeight: \"bold\" }}>Loss</div>\n                <div>{this.state.loss}</div>\n              </div>\n\n              <Button\n                style={{\n                  backgroundColor: \"black\"\n                }}\n                onClick={this.handleTrain}\n              >\n                <div\n                  style={{\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\"\n                  }}\n                >\n                  <Icon\n                    type=\"sliders\"\n                    style={{\n                      color: \"white\",\n                      marginRight: \"0.5vw\"\n                    }}\n                  />\n                  <div style={{ color: \"white\" }}>Train</div>\n                </div>\n              </Button>\n            </div>\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                width: \"100%\",\n                justifyContent: \"space-evenly\",\n                marginBottom: \"2vh\"\n              }}\n            >\n              <div style={{ width: \"30%\" }}>\n                <Dragger\n                  showUploadList={false}\n                  onChange={event => {\n                    this.setState({\n                      targetImage:\n                        event.fileList[event.fileList.length - 1].originFileObj\n                    });\n                  }}\n                >\n                  <p className=\"ant-upload-drag-icon\">\n                    <Icon type=\"inbox\" style={{ color: \"black\" }} />\n                  </p>\n                  <p className=\"ant-upload-text\">\n                    Click or drag file to this area to upload\n                  </p>\n                  <p className=\"ant-upload-hint\">\n                    Support for a single or bulk upload. Strictly prohibit from\n                    uploading company data or other band files\n                  </p>\n                </Dragger>\n              </div>\n\n              <div>\n                <div\n                  style={{\n                    fontWeight: \"bold\",\n                    fontSize: \"3vw\",\n                    color: \"black\"\n                  }}\n                >\n                  Target Data\n                </div>\n\n                <div>{`Regression: ${this.state.response}`} </div>\n                <div>{`Prediction: ${this.state.prediction}`}</div>\n\n                <div\n                  style={{ display: \"flex\", justifyContent: \"space-evenly\" }}\n                >\n                  <Button\n                    style={{\n                      marginTop: \"2vh\",\n                      backgroundColor: \"black\",\n                      color: \"white\"\n                    }}\n                    onClick={this.handleUpload}\n                  >\n                    <Icon type=\"plus\" />\n                    Add Image\n                  </Button>\n                  <Button\n                    style={{\n                      marginTop: \"2vh\",\n                      color: \"black\"\n                    }}\n                    onClick={this.handleIdentify}\n                  >\n                    <Icon type=\"eye\" />\n                    Predict\n                  </Button>\n                </div>\n              </div>\n            </div>\n          </div>\n        ) : (\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              height: \"50vh\",\n              weight: \"100vw\",\n              flexDirection: \"column\"\n            }}\n          >\n            <ClimbingBoxLoader style={{ width: \"20vw\" }} />\n            <div style={{ fontSize: \"1.2vw\", fontWeight: \"bold\" }}>Loading</div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}